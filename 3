////////////////////////////////////////////////////////////////////

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>
#define MAX(X,Y) (X>Y?X:Y)
void test()
{
	int a = 1;static int b = 1;
	a++; b++;
	printf("%d %d\n", a,b);
}
int max(int x, int y)
{
	if (x > y)
	{
		return x;
	}
	else
	{
		return y;
	}
}

int main()
{
	int a = 10;
	int b = a++;
	printf("a %d   b %d\n",a,b );
	b = ++a;
	printf("a %d   b %d\n", a, b);
	b = a--;
	printf("a %d   b %d\n", a, b);
	b = --a;
	printf("a %d   b %d\n", a, b);

	int a = (int)3.14;

	int a = 10;
	int b = 20;
	int max = (a > b ? a : b);

	typedef unsigned int u_int;

	int i = 0;
	while (i < 5)
	{
		test();
		i++;
	}

	int a = 10; int b = 20;
	int n = max(a, b);
	int m = MAX(a, b);
	printf("%d %d", n, m);

	int a = 10;
	int* p = &a;
	printf("%p\n", &a);
	printf("%p\n", p);
	*p = 11;   //解引用操作符
	printf("%d\n", a);
	char c = 'z';
	char* cp = &c;
	*cp = 'a';
	printf("%c\n", c);
	printf("%d\n", sizeof(p));
	printf("%d", sizeof(cp));

	return 0;
}

////////////////////////////////////////////////////////
// 
// ~ 按位取反，EOF end of file 文件结束符号
// 负数存储为补码，正数三码相同
//原码符号位不变，其余取反，得到反码，反码+1得到补码
//第一位为符号位，1负 0正
//后置++ -- 先使用再加减，前置++ -- 先加减再使用
//(类型) 强制转换
// != 不等于
//逻辑：&& 与，|| 或，(exp1? exp2:exp3)
//typedef 类型重定义
//static修饰局部变量，生命周期变长，修饰函数改变链接属性、全局变量作用域改变，只能在所在源文件内部使用
//#define 定义宏
//一个内存单元一个字节
