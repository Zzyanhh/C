//输入完按下回车会在输入缓冲区留下'\n'
//==不能比较字符串

///////////////////////////////////////////////////////////////////////////

//#define _CRT_SECURE_NO_WARNINGS
//#include <stdio.h>
//#include <string.h>
//#include <windows.h>
//#include <stdlib.h>
//int main()
//{
	//int i = 0;
	//int ch = 0;
	//int g;
	//char password[20] = { 0 };
	//printf("输入密码：");
	//scanf("%s", password);
	//while ((ch = getchar()) != '\n')
	//{
	//	getchar();
	//}
	//printf("请确认（Y/N）：");
	//scanf("%c", &i);
	//if (i == 'Y')
	//	printf("确认成功");
	//else
	//	printf("确认失败");

	//for (int i = 0; i <= 10; i++)
	//{
	//	if (5 == i)
	//		continue;
	//	printf("%d  ", i);
	//}

	//int i = 1;
	//do
	//{
	//	printf("%d\n", i);
	//	i++;
	//} while (i <= 10);

	//int n,s;
	//int m = 1;
	//scanf("%d", &n);
	//for (int i = 1; i <= n; i++)
	//{
	//	m = m * i;
	//}
	//printf("%d", m);

	//int i,j,n;
	//scanf("%d", &n);
	//int s2 = 0;
	//for (i = 1; i <= n; i++)
	//{
	//	int s1 = 1;
	//	for (j = 1; j <= i; j++) 
	//	{
	//		s1 = s1 * j;
	//	}
	//	s2 = s2 + s1;
	//}
	//int s = 1;
	//int g = 0;
	//for (int i=1; i <= 10; i++)
	//{
	//	s = s * i;
	//	g = g + s;
	//}
	//printf("%d", g);

	//int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
	//int sz = sizeof(arr) / sizeof(arr[0]);
	//int k = 5;
	//int l = 0;
	//int r = sz - 1;
	//while (l <= r)
	//{
	//	int m = (l + r) / 2;
	//	if (arr[m] > k)
	//	{
	//		r = m - 1;
	//	}
	//	else if (arr[m] < k)
	//	{
	//		l = m + 1;
	//	}
	//	else
	//	{
	//		printf("找到了，下标为%d", m);
	//		break;
	//	}
	//}
	//if(l>r)
	//	printf("没找到");

	//char arr1[] = "i want to fuck u";
	//char arr2[] = "                ";
	//int sz = strlen(arr1);   //sizeof要-2,有'\0'
	//int r = sz - 1;
	//int l = 0;
	//while (l <= r)
	//{
	//	arr2[l] = arr1[l];
	//	arr2[r] = arr1[r];
	//	printf("%s\n", arr2);
	//	Sleep(1000);
	//	system("cls");
	//	l++; r--;
	//}
	//printf("%s", arr2);
//	char password[20];
//	int i;
//	for (i = 0; i < 3; i++)
//	{
//		scanf("%s", password);
//		if (strcmp(password, "123456") == 0) 
//		{
//			printf("win");
//		}
//	}
//	if(i == 3)
//		printf("lose");
//	return 0;
//}

////////////////////////////////////////////////////////////////
